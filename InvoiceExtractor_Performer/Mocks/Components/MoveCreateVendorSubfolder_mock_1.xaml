<Activity mc:Ignorable="sap sap2010" x:Class="MoveToVendorSubfolder" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umamm="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Models;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umm="clr-namespace:UiPath.MicrosoftOffice365.Models;assembly=UiPath.MicrosoftOffice365" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_EmailID" Type="InArgument(x:String)" />
    <x:Property Name="in_VendorName" Type="InArgument(x:String)" />
    <x:Property Name="in_Account" Type="InArgument(x:String)" />
    <x:Property Name="in_ParentFolder" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>MoveToVendorSubfolder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Models</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365</x:String>
      <x:String>OutlookFolders</x:String>
      <x:String>Microsoft.Office.Interop.Outlook</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Testing.Activities.Mocks</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>Adrosonic.OutlookFolders.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Outlook</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MoveToVendorSubfolder" sap:VirtualizedContainerService.HintSize="1244,1019" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Object" Default="[&quot;MoveCreateVendorSubfolder&quot;]" Name="strComponentName" />
      <Variable x:TypeArguments="umm:Office365Message" Name="Email" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="StartedComponent" sap:VirtualizedContainerService.HintSize="492,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;StartedComponent:{0}&quot;,strComponentName)]" />
    <umam:GetEmailByIdConnections ConnectionAccountName="{x:Null}" AuthScopesInvalid="False" BodyAsHtml="False" ConnectionId="f9a78ece-4558-4fc3-a091-0cce2e1ba603" ContinueOnError="{x:Null}" DisplayName="Get Email by ID" EmailId="[in_EmailID]" sap:VirtualizedContainerService.HintSize="492,230" sap2010:WorkflowViewState.IdRef="GetEmailByIdConnections_3" Result="[Email]" SharedMailbox="{x:Null}" UseConnectionService="True" UseSharedMailbox="False">
      <umam:GetEmailByIdConnections.MailboxBackup>
        <usau:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" StoredValue="NoMailbox">
          <usau:BackupSlot.BackupValues>
            <scg:Dictionary x:TypeArguments="umame:MailboxSelectionMode, scg:List(x:Object)" />
          </usau:BackupSlot.BackupValues>
        </usau:BackupSlot>
      </umam:GetEmailByIdConnections.MailboxBackup>
    </umam:GetEmailByIdConnections>
    <ui:RetryScope ContinueOnError="{x:Null}" DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="492,429" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="2" RetryInterval="3.00:00:00">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="450,222" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode Code="' Initialize Outlook application&#xA;Dim outlookApp As New Microsoft.Office.Interop.Outlook.Application()&#xA;Dim ns As Microsoft.Office.Interop.Outlook.NameSpace = outlookApp.GetNamespace(&quot;MAPI&quot;)&#xA;&#xA;Try&#xA;    ' Validate input arguments&#xA;    If String.IsNullOrWhiteSpace(AccountName) Then&#xA;        Throw New System.Exception(&quot;Account name must be provided.&quot;)&#xA;    End If&#xA;    If String.IsNullOrWhiteSpace(ParentFolderName) Then&#xA;        Throw New System.Exception(&quot;Parent folder name must be provided.&quot;)&#xA;    End If&#xA;    If String.IsNullOrWhiteSpace(SubFolderName) Then&#xA;        Throw New System.Exception(&quot;Subfolder name must be provided.&quot;)&#xA;    End If&#xA;&#xA;    ' Locate the specified account&#xA;    Dim accountFolder As Microsoft.Office.Interop.Outlook.Folder = Nothing&#xA;    For i As Integer = 1 To ns.Folders.Count&#xA;        Dim folder As Microsoft.Office.Interop.Outlook.Folder = CType(ns.Folders(i), Microsoft.Office.Interop.Outlook.Folder)&#xA;        If folder.Name = AccountName Then&#xA;            accountFolder = folder&#xA;            Exit For&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Check if the account was found&#xA;    If accountFolder Is Nothing Then&#xA;        Throw New System.Exception(&quot;Account not found: &quot; &amp; AccountName)&#xA;    End If&#xA;&#xA;    ' Locate the parent folder under the account&#xA;    Dim parentFolder As Microsoft.Office.Interop.Outlook.Folder = Nothing&#xA;    For i As Integer = 1 To accountFolder.Folders.Count&#xA;        Dim folder As Microsoft.Office.Interop.Outlook.Folder = CType(accountFolder.Folders(i), Microsoft.Office.Interop.Outlook.Folder)&#xA;        If folder.Name = ParentFolderName Then&#xA;            parentFolder = folder&#xA;            Exit For&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Check if the parent folder was found&#xA;    If parentFolder Is Nothing Then&#xA;        Throw New System.Exception(&quot;Parent folder not found: &quot; &amp; ParentFolderName)&#xA;    End If&#xA;&#xA;    ' Check if the subfolder already exists&#xA;    Dim existingSubFolder As Microsoft.Office.Interop.Outlook.Folder = Nothing&#xA;    For i As Integer = 1 To parentFolder.Folders.Count&#xA;        Dim subFolder As Microsoft.Office.Interop.Outlook.Folder = CType(parentFolder.Folders(i), Microsoft.Office.Interop.Outlook.Folder)&#xA;        If subFolder.Name = SubFolderName Then&#xA;            existingSubFolder = subFolder&#xA;            Exit For&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Create the subfolder if it doesn't exist&#xA;    If existingSubFolder Is Nothing Then&#xA;        parentFolder.Folders.Add(SubFolderName)&#xA;        Console.WriteLine(&quot;Subfolder created successfully: &quot; &amp; SubFolderName)&#xA;    Else&#xA;        Console.WriteLine(&quot;Subfolder already exists: &quot; &amp; SubFolderName)&#xA;    End If&#xA;Catch ex As System.Exception&#xA;    Console.WriteLine(&quot;Error: &quot; &amp; ex.Message)&#xA;End Try&#xA;" ContinueOnError="{x:Null}" DisplayName="Invoke Code - Create SubFolder" sap:VirtualizedContainerService.HintSize="416,57" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="AccountName">[in_Account]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ParentFolderName">[in_ParentFolder]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="SubFolderName">[in_VendorName]</InArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
            <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="416,57" sap2010:WorkflowViewState.IdRef="Delay_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <umam:MoveEmailConnections ConnectionAccountName="{x:Null}" FolderIdBackup="{x:Reference __ReferenceID0}" AuthScopesInvalid="False" BodyAsHtml="False" BrowserFolder="Invoices/Other" BrowserFolderId="AQMkADAwATM0MDAAMi04NjExAC05MGQ3LTAwAi0wMAoALgAAA3sRJ5omrixBnqEsIF0nmiQBALNCgC82eXkATZ2UhRTiXsBqAAABAh91AAAA" ConnectionId="f9a78ece-4558-4fc3-a091-0cce2e1ba603" ContinueOnError="{x:Null}" DisplayName="Move Email" Email="[Email]" sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="MoveEmailConnections_1" Mailbox="{x:Null}" ManualEntryFolder="[&quot;Invoices/&quot; + in_VendorName]" Result="{x:Null}" SelectionMode="EnterPath" UseConnectionService="True" UseSharedMailbox="False">
              <umam:MoveEmailConnections.MailFolderArgument>
                <umamm:MailFolderArgument ConnectionDescriptor="{x:Null}" ConnectionKey="{x:Null}" BrowserFolder="Invoices/Other" BrowserFolderId="AQMkADAwATM0MDAAMi04NjExAC05MGQ3LTAwAi0wMAoALgAAA3sRJ5omrixBnqEsIF0nmiQBALNCgC82eXkATZ2UhRTiXsBqAAABAh91AAAA" ManualEntryFolder="[&quot;Invoices/&quot; + in_VendorName]" SelectionMode="EnterPath">
                  <umamm:MailFolderArgument.Backup>
                    <usau:BackupSlot x:TypeArguments="umame:ItemSelectionMode" x:Name="__ReferenceID0" StoredValue="EnterPath">
                      <usau:BackupSlot.BackupValues>
                        <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                          <InArgument x:TypeArguments="x:String" />
                          <x:Null />
                        </scg:List>
                      </usau:BackupSlot.BackupValues>
                    </usau:BackupSlot>
                  </umamm:MailFolderArgument.Backup>
                </umamm:MailFolderArgument>
              </umam:MoveEmailConnections.MailFolderArgument>
              <umam:MoveEmailConnections.MailboxBackup>
                <usau:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" StoredValue="NoMailbox">
                  <usau:BackupSlot.BackupValues>
                    <scg:Dictionary x:TypeArguments="umame:MailboxSelectionMode, scg:List(x:Object)" />
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </umam:MoveEmailConnections.MailboxBackup>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </umam:MoveEmailConnections>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ui:LogMessage DisplayName="EndedComponent" sap:VirtualizedContainerService.HintSize="492,164" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[String.Format(&quot;EndedComponent:{0}&quot;,strComponentName)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>